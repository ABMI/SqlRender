% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RenderSql.R
\name{translateSingleStatementSql}
\alias{translateSingleStatementSql}
\title{Translates a single SQL statement from one dialect to another}
\usage{
translateSingleStatementSql(sql = "", targetDialect,
  oracleTempSchema = NULL)
}
\arguments{
\item{sql}{The SQL to be translated}

\item{targetDialect}{The target dialect. Currently "oracle", "postgresql", "pdw", "impala", "netezza", "bigquery", and
"redshift" are supported}

\item{oracleTempSchema}{A schema that can be used to create temp tables in when using Oracle or Impala.}
}
\value{
A list containing the following elements: \describe{ \item{originalSql}{The original parameterized
SQL code} \item{sql}{The translated SQL} }
}
\description{
\code{translateSql} translates a single SQL statement from one dialect to another.
}
\details{
This function takes SQL in one dialect and translates it into another. It uses simple pattern
replacement, so its functionality is limited. This removes any trailing semicolon as required 
by Oracle when sending through JDBC. An error is thrown if more than one statement is encountered 
in the SQL.
}
\examples{
translateSingleStatementSql("USE my_schema;", targetDialect = "oracle")

}
